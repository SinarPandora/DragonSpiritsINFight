<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:mainWindow="clr-namespace:DragonSpiritsINFight.ViewModels.MainWindow"
        xmlns:materialIcons="clr-namespace:Material.Icons.Avalonia;assembly=Material.Icons.Avalonia"
        xmlns:assets="clr-namespace:DragonSpiritsINFight.Assets;assembly=INFight.Res"
        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
        x:Class="DragonSpiritsINFight.Views.MainWindow.MainWindow"
        x:DataType="mainWindow:MainWindowViewModel"
        Icon="/Assets/avalonia-logo.ico"
        Title="{x:Static assets:Resources.AppName}"
        TransparencyLevelHint="AcrylicBlur"
        Background="Transparent"
        ExtendClientAreaToDecorationsHint="False"
        Width="800"
        Height="450"
        CanResize="False">

    <Design.DataContext>
        <!-- This only sets the DataContext for the previewer in an IDE,
             to set the actual DataContext for runtime, set the DataContext property in code (look at App.axaml.cs) -->
        <mainWindow:MainWindowViewModel />
    </Design.DataContext>

    <Window.Resources>
        <!-- 颜色变量 -->
        <ResourceDictionary>
            <ResourceDictionary.ThemeDictionaries>
                <ResourceDictionary x:Key="Light">
                    <Color x:Key="AcrylicBackground">White</Color>
                    <SolidColorBrush x:Key="MainWindowBackground">White</SolidColorBrush>
                </ResourceDictionary>
                <ResourceDictionary x:Key="Dark">
                    <!-- ReSharper disable Xaml.RedundantResource -->
                    <Color x:Key="AcrylicBackground">Black</Color>
                    <SolidColorBrush x:Key="MainWindowBackground">DimGray</SolidColorBrush>
                    <!-- ReSharper restore Xaml.RedundantResource -->
                </ResourceDictionary>
            </ResourceDictionary.ThemeDictionaries>
        </ResourceDictionary>

    </Window.Resources>

    <Panel>
        <!-- 亚克力背景特效 -->
        <ExperimentalAcrylicBorder IsHitTestVisible="False">
            <ExperimentalAcrylicBorder.Material>
                <ExperimentalAcrylicMaterial
                    BackgroundSource="Digger"
                    TintColor="{DynamicResource AcrylicBackground}"
                    TintOpacity="1"
                    MaterialOpacity="0.65" />
            </ExperimentalAcrylicBorder.Material>
        </ExperimentalAcrylicBorder>

        <!-- 分割视图 -->
        <SplitView IsPaneOpen="{Binding IsSideNavOpen}"
                   OpenPaneLength="200"
                   CompactPaneLength="48"
                   DisplayMode="CompactInline"
                   Background="Transparent"
                   PaneBackground="Transparent">
            <!-- 侧边导航 -->
            <SplitView.Pane>
                <StackPanel Spacing="5" Margin="5">
                    <Button Command="{Binding ToggleSideNav}"
                            Content="{materialIcons:MaterialIconExt Kind=Menu, Size=20}" />
                    <ListBox ItemsSource="{Binding NavItems}"
                             SelectedItem="{Binding SideNavItem}"
                             SelectionMode="AlwaysSelected">
                        <ListBox.ItemTemplate>
                            <DataTemplate DataType="{x:Type mainWindow:SideNavItem}">
                                <StackPanel Spacing="15" Orientation="Horizontal">
                                    <materialIcons:MaterialIcon Kind="{Binding Icon}" />
                                    <TextBlock Text="{Binding Label}" />
                                </StackPanel>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </StackPanel>
            </SplitView.Pane>
            <!-- 当前页面 -->
            <SplitView.Content>
                <Border CornerRadius="12 0 0 12" Background="{DynamicResource MainWindowBackground}">
                    <StackPanel Margin="20">
                        <!-- 路由视图 -->
                        <TransitioningContentControl Content="{Binding CurrentPage}" />
                    </StackPanel>
                </Border>
            </SplitView.Content>
        </SplitView>
    </Panel>
</Window>
